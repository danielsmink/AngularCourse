"use strict";angular.module("waitstaff",["ngRoute","ngAnimate"]).constant("VERSION","1.2").run(["VERSION","$location","$timeout","$rootScope","$templateCache",function(e,a,t,n,r){n.version=e,n.$on("$viewContentLoaded",function(){r.removeAll()}),n.$on("$routeChangeError",function(){a.path("/error")}),n.$on("$routeChangeStart",function(){n.isLoading=!0}),n.$on("$routeChangeSuccess",function(){t(function(){n.isLoading=!1},1e3)})}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"./js/waitstaff/home.html"}).when("/new-meal",{templateUrl:"./js/waitstaff-meal/new-meal.html"}).when("/my-earnings",{templateUrl:"./js/waitstaff-earnings/my-earnings.html"}).when("/error",{template:"<p>Error Page Not Found</p>"}).otherwise({redirectTo:"/error"})}]),angular.module("waitstaff").directive("smartFloat",function(){return{require:"ngModel",link:function(e,a,t,n){var r=/^\-?\d+((\.|\,)\d+)?$/;n.$parsers.unshift(function(e){return r.test(e)?(n.$setValidity("float",!0),parseFloat(e.replace(",","."))):void n.$setValidity("float",!1)})}}}),angular.module("waitstaff").service("WaitstaffSvc",function(){this.earnings={tipTotal:0,mealCount:0,avgTip:0},this.getEarnings=function(){return this.earnings},this.updateEarnings=function(e){this.earnings.tipTotal=this.earnings.tipTotal+e.chargeTip,this.earnings.mealCount++,this.earnings.avgTip=this.earnings.tipTotal/this.earnings.mealCount},this.resetEarnings=function(){this.earnings={tipTotal:0,mealCount:0,avgTip:0}}}),angular.module("waitstaff").controller("earningsController",["$scope","WaitstaffSvc",function(e,a){e.earnings=a.getEarnings(),e.resetApp=function(){a.resetEarnings(),e.earnings=a.getEarnings()}}]),angular.module("waitstaff").controller("waitstaffController",["$scope","WaitstaffSvc",function(e,a){e.errorMessage=!1,e.formValid=!1,e.meal={chargeSubtotal:0,chargeTip:0,chargeTotal:0},e.validate=function(){console.log(e.mealForm.$error),e.mealForm.$valid?(e.meal.chargeSubtotal=e.meal.baseprice*(1+e.meal.taxrate/100),e.meal.chargeTip=e.meal.chargeSubtotal*(e.meal.tippercentage/100),e.meal.chargeTotal=e.meal.chargeSubtotal+e.meal.chargeTip,a.updateEarnings(e.meal),e.meal.baseprice=null,e.meal.taxrate=null,e.meal.tippercentage=null):e.errorMessage="Please fill in all the fields"},e.cancelMeal=function(){e.formValid=!1,e.errorMessage=!1,e.meal.baseprice=null,e.meal.taxrate=null,e.meal.tippercentage=null}}]);
//# sourceMappingURL=data:application/json;base64,