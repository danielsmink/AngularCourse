"use strict";var INTEGER_REGEXP=/^\-?\d+$/,FLOAT_REGEXP=/^\-?\d+((\.|\,)\d+)?$/;angular.module("waitstaff",["ngRoute"]).constant("VERSION","1.1").run(["VERSION","$rootScope",function(e,t){t.version=e}]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"./js/waitstaff/home.html"}).when("/new-meal",{templateUrl:"./js/waitstaff-meal/new-meal.html"}).when("/my-earnings",{templateUrl:"./js/waitstaff-earnings/my-earnings.html"}).when("/error",{template:"<p>Error Page Not Found</p>"}).otherwise({redirectTo:"/error"})}]).controller("waitstaffController",["$scope",function(e){e.errorMessage=!1,e.formValid=!1,e.chargeSubtotal=0,e.chargeTip=0,e.chargeTotal=0,e.tipTotal=0,e.mealCount=0,e.avgTip=0,e.validate=function(){e.mealForm.$valid?(e.chargeSubtotal=e.meal.baseprice*(1+e.meal.taxrate/100),e.chargeTip=e.chargeSubtotal*(e.meal.tippercentage/100),e.chargeTotal=e.chargeSubtotal+e.chargeTip,e.tipTotal=e.tipTotal+e.chargeTip,e.mealCount=e.mealCount+1,e.avgTip=e.tipTotal/e.mealCount,e.meal=null):e.errorMessage="Please fill in all the fields"},e.cancelMeal=function(){e.formValid=!1,e.errorMessage=!1,e.meal=null},e.resetApp=function(){e.formValid=!1,e.errorMessage=!1,e.meal=null,e.chargeSubtotal=0,e.chargeTip=0,e.chargeTotal=0,e.tipTotal=0,e.mealCount=0,e.avgTip=0}}]).directive("integer",function(){return{require:"ngModel",link:function(e,t,a,r){r.$parsers.unshift(function(e){return INTEGER_REGEXP.test(e)?(r.$setValidity("integer",!0),e):void r.$setValidity("integer",!1)})}}}).directive("smartFloat",function(){return{require:"ngModel",link:function(e,t,a,r){r.$parsers.unshift(function(e){return FLOAT_REGEXP.test(e)?(r.$setValidity("float",!0),parseFloat(e.replace(",","."))):void r.$setValidity("float",!1)})}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlcyI6WyJhcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFFQSxJQUFBLGdCQUFBLFdBQ0EsYUFBQSx1QkFFQSxTQUFBLE9BQUEsYUFBQSxZQUNBLFNBQUEsVUFBQSxPQUNBLEtBQUEsVUFBQSxhQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsUUFBQSxLQUVBLFFBQUEsaUJBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxLQUNBLFlBQUEsNkJBRUEsS0FBQSxhQUNBLFlBQUEsc0NBRUEsS0FBQSxnQkFDQSxZQUFBLDZDQUVBLEtBQUEsVUFDQSxTQUFBLGdDQUVBLFdBQ0EsV0FBQSxjQUdBLFdBQUEsdUJBQUEsU0FBQSxTQUFBLEdBR0EsRUFBQSxjQUFBLEVBQ0EsRUFBQSxXQUFBLEVBRUEsRUFBQSxlQUFBLEVBQ0EsRUFBQSxVQUFBLEVBQ0EsRUFBQSxZQUFBLEVBQ0EsRUFBQSxTQUFBLEVBQ0EsRUFBQSxVQUFBLEVBQ0EsRUFBQSxPQUFBLEVBR0EsRUFBQSxTQUFBLFdBRUEsRUFBQSxTQUFBLFFBQ0EsRUFBQSxlQUFBLEVBQUEsS0FBQSxXQUFBLEVBQUEsRUFBQSxLQUFBLFFBQUEsS0FDQSxFQUFBLFVBQUEsRUFBQSxnQkFBQSxFQUFBLEtBQUEsY0FBQSxLQUNBLEVBQUEsWUFBQSxFQUFBLGVBQUEsRUFBQSxVQUdBLEVBQUEsU0FBQSxFQUFBLFNBQUEsRUFBQSxVQUNBLEVBQUEsVUFBQSxFQUFBLFVBQUEsRUFDQSxFQUFBLE9BQUEsRUFBQSxTQUFBLEVBQUEsVUFHQSxFQUFBLEtBQUEsTUFFQSxFQUFBLGFBQUEsaUNBS0EsRUFBQSxXQUFBLFdBQ0EsRUFBQSxXQUFBLEVBQ0EsRUFBQSxjQUFBLEVBQ0EsRUFBQSxLQUFBLE1BSUEsRUFBQSxTQUFBLFdBQ0EsRUFBQSxXQUFBLEVBQ0EsRUFBQSxjQUFBLEVBQ0EsRUFBQSxLQUFBLEtBQ0EsRUFBQSxlQUFBLEVBQ0EsRUFBQSxVQUFBLEVBQ0EsRUFBQSxZQUFBLEVBQ0EsRUFBQSxTQUFBLEVBQ0EsRUFBQSxVQUFBLEVBQ0EsRUFBQSxPQUFBLE1BSUEsVUFBQSxVQUFBLFdBQ0EsT0FDQSxRQUFBLFVBQ0EsS0FBQSxTQUFBLEVBQUEsRUFBQSxFQUFBLEdBQ0EsRUFBQSxTQUFBLFFBQUEsU0FBQSxHQUNBLE1BQUEsZ0JBQUEsS0FBQSxJQUVBLEVBQUEsYUFBQSxXQUFBLEdBQ0EsT0FHQSxHQUFBLGFBQUEsV0FBQSxTQVFBLFVBQUEsYUFBQSxXQUNBLE9BQ0EsUUFBQSxVQUNBLEtBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxHQUNBLEVBQUEsU0FBQSxRQUFBLFNBQUEsR0FDQSxNQUFBLGNBQUEsS0FBQSxJQUNBLEVBQUEsYUFBQSxTQUFBLEdBQ0EsV0FBQSxFQUFBLFFBQUEsSUFBQSxXQUVBLEdBQUEsYUFBQSxTQUFBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgSU5URUdFUl9SRUdFWFAgPSAvXlxcLT9cXGQrJC8sXG4gIEZMT0FUX1JFR0VYUCA9IC9eXFwtP1xcZCsoKFxcLnxcXCwpXFxkKyk/JC87XG5cbmFuZ3VsYXIubW9kdWxlKCd3YWl0c3RhZmYnLCBbJ25nUm91dGUnXSlcbiAgLmNvbnN0YW50KCdWRVJTSU9OJywgJzEuMScpXG4gIC5ydW4oZnVuY3Rpb24oVkVSU0lPTiwgJHJvb3RTY29wZSl7XG4gICAgJHJvb3RTY29wZS52ZXJzaW9uID0gVkVSU0lPTjtcbiAgfSlcbiAgLmNvbmZpZyhmdW5jdGlvbigkcm91dGVQcm92aWRlcil7XG4gICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsIHtcbiAgICAgIHRlbXBsYXRlVXJsIDogJy4vanMvd2FpdHN0YWZmL2hvbWUuaHRtbCdcbiAgICB9KVxuICAgIC53aGVuKCcvbmV3LW1lYWwnLCB7XG4gICAgICB0ZW1wbGF0ZVVybCA6ICcuL2pzL3dhaXRzdGFmZi1tZWFsL25ldy1tZWFsLmh0bWwnXG4gICAgfSlcbiAgICAud2hlbignL215LWVhcm5pbmdzJywge1xuICAgICAgdGVtcGxhdGVVcmwgOiAnLi9qcy93YWl0c3RhZmYtZWFybmluZ3MvbXktZWFybmluZ3MuaHRtbCdcbiAgICB9KVxuICAgIC53aGVuKCcvZXJyb3InLCB7XG4gICAgICB0ZW1wbGF0ZSA6ICc8cD5FcnJvciBQYWdlIE5vdCBGb3VuZDwvcD4nXG4gICAgfSlcbiAgICAub3RoZXJ3aXNlKHtcbiAgICAgIHJlZGlyZWN0VG8gOiAnL2Vycm9yJ1xuICAgIH0pO1xuICB9KVxuICAuY29udHJvbGxlcignd2FpdHN0YWZmQ29udHJvbGxlcicsIGZ1bmN0aW9uKCRzY29wZSl7XG5cbiAgICAvL0luaXRpYWxpemUgc29tZSB2YWx1ZXNcbiAgICAkc2NvcGUuZXJyb3JNZXNzYWdlID0gZmFsc2U7XG4gICAgJHNjb3BlLmZvcm1WYWxpZCA9IGZhbHNlO1xuXG4gICAgJHNjb3BlLmNoYXJnZVN1YnRvdGFsID0gMDtcbiAgICAkc2NvcGUuY2hhcmdlVGlwID0gMDtcbiAgICAkc2NvcGUuY2hhcmdlVG90YWwgPSAwO1xuICAgICRzY29wZS50aXBUb3RhbCA9IDA7XG4gICAgJHNjb3BlLm1lYWxDb3VudCA9IDA7XG4gICAgJHNjb3BlLmF2Z1RpcCA9IDA7XG5cbiAgICAvL0Zvcm0gdmFsaWRhdGlvbiBhbmQgdmFsdWUgaGFuZGxpbmdcbiAgICAkc2NvcGUudmFsaWRhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vRm9ybSBpcyB2YWxpZCBzbyB3ZSBjYWxjdWxhdGUgYWxsIHRoZSB2YWx1ZXMgZm9yIHRoZSBjdXN0b21lciBjaGFyZ2VcbiAgICAgIGlmKCRzY29wZS5tZWFsRm9ybS4kdmFsaWQpIHtcbiAgICAgICAgJHNjb3BlLmNoYXJnZVN1YnRvdGFsID0gJHNjb3BlLm1lYWwuYmFzZXByaWNlICogKDEgKyAkc2NvcGUubWVhbC50YXhyYXRlIC8gMTAwKTtcbiAgICAgICAgJHNjb3BlLmNoYXJnZVRpcCA9ICRzY29wZS5jaGFyZ2VTdWJ0b3RhbCAqICgkc2NvcGUubWVhbC50aXBwZXJjZW50YWdlIC8gMTAwKTtcbiAgICAgICAgJHNjb3BlLmNoYXJnZVRvdGFsID0gJHNjb3BlLmNoYXJnZVN1YnRvdGFsICsgJHNjb3BlLmNoYXJnZVRpcDtcblxuICAgICAgICAvLyBTZXQgdG90YWxzXG4gICAgICAgICRzY29wZS50aXBUb3RhbCA9ICRzY29wZS50aXBUb3RhbCArICRzY29wZS5jaGFyZ2VUaXA7XG4gICAgICAgICRzY29wZS5tZWFsQ291bnQgPSAkc2NvcGUubWVhbENvdW50ICsgMTtcbiAgICAgICAgJHNjb3BlLmF2Z1RpcCA9ICRzY29wZS50aXBUb3RhbCAvICRzY29wZS5tZWFsQ291bnQ7XG5cbiAgICAgICAgLy8gUmVzZXQgdGhlIG1lYWwgZm9ybVxuICAgICAgICAkc2NvcGUubWVhbCA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkc2NvcGUuZXJyb3JNZXNzYWdlID0gJ1BsZWFzZSBmaWxsIGluIGFsbCB0aGUgZmllbGRzJztcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy9NZWFsIGZvcm0gcmVzZXRcbiAgICAkc2NvcGUuY2FuY2VsTWVhbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLmZvcm1WYWxpZCA9IGZhbHNlO1xuICAgICAgJHNjb3BlLmVycm9yTWVzc2FnZSA9IGZhbHNlO1xuICAgICAgJHNjb3BlLm1lYWwgPSBudWxsO1xuICAgIH07XG5cbiAgICAvL0FwcGxpY2F0aW9uIHJlc2V0XG4gICAgJHNjb3BlLnJlc2V0QXBwID0gZnVuY3Rpb24oKSB7XG4gICAgICAkc2NvcGUuZm9ybVZhbGlkID0gZmFsc2U7XG4gICAgICAkc2NvcGUuZXJyb3JNZXNzYWdlID0gZmFsc2U7XG4gICAgICAkc2NvcGUubWVhbCA9IG51bGw7XG4gICAgICAkc2NvcGUuY2hhcmdlU3VidG90YWwgPSAwO1xuICAgICAgJHNjb3BlLmNoYXJnZVRpcCA9IDA7XG4gICAgICAkc2NvcGUuY2hhcmdlVG90YWwgPSAwO1xuICAgICAgJHNjb3BlLnRpcFRvdGFsID0gMDtcbiAgICAgICRzY29wZS5tZWFsQ291bnQgPSAwO1xuICAgICAgJHNjb3BlLmF2Z1RpcCA9IDA7XG4gICAgfTtcbiAgfSlcbiAgLy8gRGlyZWN0aXZlIHRvIHZhbGlkYXRlIGludGVnZXJzIHNoYW1lbGVzc2x5IGNvcGllZCBmcm9tIHRoZSBBbnVnbGFySlMgZG9jdW1lbnRhdGlvblxuICAuZGlyZWN0aXZlKCdpbnRlZ2VyJywgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlcXVpcmU6ICduZ01vZGVsJyxcbiAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbG0sIGF0dHJzLCBjdHJsKSB7XG4gICAgICAgIGN0cmwuJHBhcnNlcnMudW5zaGlmdChmdW5jdGlvbih2aWV3VmFsdWUpIHtcbiAgICAgICAgICBpZiAoSU5URUdFUl9SRUdFWFAudGVzdCh2aWV3VmFsdWUpKSB7XG4gICAgICAgICAgICAvLyBpdCBpcyB2YWxpZFxuICAgICAgICAgICAgY3RybC4kc2V0VmFsaWRpdHkoJ2ludGVnZXInLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiB2aWV3VmFsdWU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGl0IGlzIGludmFsaWQsIHJldHVybiB1bmRlZmluZWQgKG5vIG1vZGVsIHVwZGF0ZSlcbiAgICAgICAgICAgIGN0cmwuJHNldFZhbGlkaXR5KCdpbnRlZ2VyJywgZmFsc2UpO1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pXG4gIC8vIERpcmVjdGl2ZSB0byB2YWxpZGF0ZSBmbG9hdHMgc2hhbWVsZXNzbHkgY29waWVkIGZyb20gdGhlIEFudWdsYXJKUyBkb2N1bWVudGF0aW9uXG4gIC5kaXJlY3RpdmUoJ3NtYXJ0RmxvYXQnLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVxdWlyZTogJ25nTW9kZWwnLFxuICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsbSwgYXR0cnMsIGN0cmwpIHtcbiAgICAgICAgY3RybC4kcGFyc2Vycy51bnNoaWZ0KGZ1bmN0aW9uKHZpZXdWYWx1ZSkge1xuICAgICAgICAgIGlmIChGTE9BVF9SRUdFWFAudGVzdCh2aWV3VmFsdWUpKSB7XG4gICAgICAgICAgICBjdHJsLiRzZXRWYWxpZGl0eSgnZmxvYXQnLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZpZXdWYWx1ZS5yZXBsYWNlKCcsJywgJy4nKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGN0cmwuJHNldFZhbGlkaXR5KCdmbG9hdCcsIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=